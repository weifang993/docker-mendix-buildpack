// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package saml20.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import java.io.InputStream;
import java.net.URL;
import java.net.URLConnection;

public class StoreURLToFileDocument extends CustomJavaAction<java.lang.Boolean>
{
	private java.lang.String url;
	private IMendixObject __filedoc;
	private system.proxies.FileDocument filedoc;
	private java.lang.String filename;

	public StoreURLToFileDocument(IContext context, java.lang.String url, IMendixObject filedoc, java.lang.String filename)
	{
		super(context);
		this.url = url;
		this.__filedoc = filedoc;
		this.filename = filename;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.filedoc = __filedoc == null ? null : system.proxies.FileDocument.initialize(getContext(), __filedoc);

		// BEGIN USER CODE
        if (this.filedoc == null || this.url == null || this.filename == null)
            throw new Exception("No document, filename or URL provided");

//		final int MAX_REMOTE_FILESIZE = 1024 * 1024 * 200; //maxium of 200 MB
        URL imageUrl = new URL(this.url);
        URLConnection connection = imageUrl.openConnection();
        //we connect in 20 seconds or not at all
        connection.setConnectTimeout(20000);
        connection.setReadTimeout(20000);
        connection.connect();

        //check on forehand the size of the remote file, we don't want to kill the server by providing a 3 terabyte image.
        //if (connection.getContentLength() < 0 || connection.getContentLength() >  MAX_REMOTE_FILESIZE) //maximum of 200 mb
        //	throw new IllegalArgumentException("MxID: importing image, wrong filesize of remote url: " + connection.getContentLength()+ " (max: " + String.valueOf(MAX_REMOTE_FILESIZE)+ ")");

        //NB; stream is closed by the core
        try (InputStream inputStream = connection.getInputStream()) {
            Core.storeFileDocumentContent(getContext(), this.__filedoc, this.filename, inputStream);
        }
        return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "StoreURLToFileDocument";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
