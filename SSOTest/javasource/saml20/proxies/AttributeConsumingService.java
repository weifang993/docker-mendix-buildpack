// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package saml20.proxies;

public class AttributeConsumingService
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject attributeConsumingServiceMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SAML20.AttributeConsumingService";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		index("index"),
		isDefault("isDefault"),
		AttributeConsumingServiceType_ServiceDescription("SAML20.AttributeConsumingServiceType_ServiceDescription"),
		AttributeConsumingServiceType_ServiceName("SAML20.AttributeConsumingServiceType_ServiceName"),
		AttributeConsumingService_RoleDescriptor("SAML20.AttributeConsumingService_RoleDescriptor");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public AttributeConsumingService(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SAML20.AttributeConsumingService"));
	}

	protected AttributeConsumingService(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject attributeConsumingServiceMendixObject)
	{
		if (attributeConsumingServiceMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("SAML20.AttributeConsumingService", attributeConsumingServiceMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SAML20.AttributeConsumingService");

		this.attributeConsumingServiceMendixObject = attributeConsumingServiceMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'AttributeConsumingService.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static saml20.proxies.AttributeConsumingService initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return saml20.proxies.AttributeConsumingService.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static saml20.proxies.AttributeConsumingService initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new saml20.proxies.AttributeConsumingService(context, mendixObject);
	}

	public static saml20.proxies.AttributeConsumingService load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return saml20.proxies.AttributeConsumingService.initialize(context, mendixObject);
	}

	public static java.util.List<saml20.proxies.AttributeConsumingService> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<saml20.proxies.AttributeConsumingService> result = new java.util.ArrayList<saml20.proxies.AttributeConsumingService>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//SAML20.AttributeConsumingService" + xpathConstraint))
			result.add(saml20.proxies.AttributeConsumingService.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of index
	 */
	public final java.lang.Integer getindex()
	{
		return getindex(getContext());
	}

	/**
	 * @param context
	 * @return value of index
	 */
	public final java.lang.Integer getindex(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.index.toString());
	}

	/**
	 * Set value of index
	 * @param index
	 */
	public final void setindex(java.lang.Integer index)
	{
		setindex(getContext(), index);
	}

	/**
	 * Set value of index
	 * @param context
	 * @param index
	 */
	public final void setindex(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer index)
	{
		getMendixObject().setValue(context, MemberNames.index.toString(), index);
	}

	/**
	 * @return value of isDefault
	 */
	public final java.lang.Boolean getisDefault()
	{
		return getisDefault(getContext());
	}

	/**
	 * @param context
	 * @return value of isDefault
	 */
	public final java.lang.Boolean getisDefault(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.isDefault.toString());
	}

	/**
	 * Set value of isDefault
	 * @param isdefault
	 */
	public final void setisDefault(java.lang.Boolean isdefault)
	{
		setisDefault(getContext(), isdefault);
	}

	/**
	 * Set value of isDefault
	 * @param context
	 * @param isdefault
	 */
	public final void setisDefault(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isdefault)
	{
		getMendixObject().setValue(context, MemberNames.isDefault.toString(), isdefault);
	}

	/**
	 * @return value of AttributeConsumingServiceType_ServiceDescription
	 */
	public final java.util.List<saml20.proxies.ServiceProperty> getAttributeConsumingServiceType_ServiceDescription() throws com.mendix.core.CoreException
	{
		return getAttributeConsumingServiceType_ServiceDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of AttributeConsumingServiceType_ServiceDescription
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<saml20.proxies.ServiceProperty> getAttributeConsumingServiceType_ServiceDescription(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<saml20.proxies.ServiceProperty> result = new java.util.ArrayList<saml20.proxies.ServiceProperty>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.AttributeConsumingServiceType_ServiceDescription.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(saml20.proxies.ServiceProperty.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of AttributeConsumingServiceType_ServiceDescription
	 * @param attributeconsumingservicetype_servicedescription
	 */
	public final void setAttributeConsumingServiceType_ServiceDescription(java.util.List<saml20.proxies.ServiceProperty> attributeconsumingservicetype_servicedescription)
	{
		setAttributeConsumingServiceType_ServiceDescription(getContext(), attributeconsumingservicetype_servicedescription);
	}

	/**
	 * Set value of AttributeConsumingServiceType_ServiceDescription
	 * @param context
	 * @param attributeconsumingservicetype_servicedescription
	 */
	public final void setAttributeConsumingServiceType_ServiceDescription(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<saml20.proxies.ServiceProperty> attributeconsumingservicetype_servicedescription)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (saml20.proxies.ServiceProperty proxyObject : attributeconsumingservicetype_servicedescription)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.AttributeConsumingServiceType_ServiceDescription.toString(), identifiers);
	}

	/**
	 * @return value of AttributeConsumingServiceType_ServiceName
	 */
	public final saml20.proxies.ServiceProperty getAttributeConsumingServiceType_ServiceName() throws com.mendix.core.CoreException
	{
		return getAttributeConsumingServiceType_ServiceName(getContext());
	}

	/**
	 * @param context
	 * @return value of AttributeConsumingServiceType_ServiceName
	 */
	public final saml20.proxies.ServiceProperty getAttributeConsumingServiceType_ServiceName(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		saml20.proxies.ServiceProperty result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.AttributeConsumingServiceType_ServiceName.toString());
		if (identifier != null)
			result = saml20.proxies.ServiceProperty.load(context, identifier);
		return result;
	}

	/**
	 * Set value of AttributeConsumingServiceType_ServiceName
	 * @param attributeconsumingservicetype_servicename
	 */
	public final void setAttributeConsumingServiceType_ServiceName(saml20.proxies.ServiceProperty attributeconsumingservicetype_servicename)
	{
		setAttributeConsumingServiceType_ServiceName(getContext(), attributeconsumingservicetype_servicename);
	}

	/**
	 * Set value of AttributeConsumingServiceType_ServiceName
	 * @param context
	 * @param attributeconsumingservicetype_servicename
	 */
	public final void setAttributeConsumingServiceType_ServiceName(com.mendix.systemwideinterfaces.core.IContext context, saml20.proxies.ServiceProperty attributeconsumingservicetype_servicename)
	{
		if (attributeconsumingservicetype_servicename == null)
			getMendixObject().setValue(context, MemberNames.AttributeConsumingServiceType_ServiceName.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.AttributeConsumingServiceType_ServiceName.toString(), attributeconsumingservicetype_servicename.getMendixObject().getId());
	}

	/**
	 * @return value of AttributeConsumingService_RoleDescriptor
	 */
	public final saml20.proxies.RoleDescriptor getAttributeConsumingService_RoleDescriptor() throws com.mendix.core.CoreException
	{
		return getAttributeConsumingService_RoleDescriptor(getContext());
	}

	/**
	 * @param context
	 * @return value of AttributeConsumingService_RoleDescriptor
	 */
	public final saml20.proxies.RoleDescriptor getAttributeConsumingService_RoleDescriptor(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		saml20.proxies.RoleDescriptor result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.AttributeConsumingService_RoleDescriptor.toString());
		if (identifier != null)
			result = saml20.proxies.RoleDescriptor.load(context, identifier);
		return result;
	}

	/**
	 * Set value of AttributeConsumingService_RoleDescriptor
	 * @param attributeconsumingservice_roledescriptor
	 */
	public final void setAttributeConsumingService_RoleDescriptor(saml20.proxies.RoleDescriptor attributeconsumingservice_roledescriptor)
	{
		setAttributeConsumingService_RoleDescriptor(getContext(), attributeconsumingservice_roledescriptor);
	}

	/**
	 * Set value of AttributeConsumingService_RoleDescriptor
	 * @param context
	 * @param attributeconsumingservice_roledescriptor
	 */
	public final void setAttributeConsumingService_RoleDescriptor(com.mendix.systemwideinterfaces.core.IContext context, saml20.proxies.RoleDescriptor attributeconsumingservice_roledescriptor)
	{
		if (attributeconsumingservice_roledescriptor == null)
			getMendixObject().setValue(context, MemberNames.AttributeConsumingService_RoleDescriptor.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.AttributeConsumingService_RoleDescriptor.toString(), attributeconsumingservice_roledescriptor.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return attributeConsumingServiceMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final saml20.proxies.AttributeConsumingService that = (saml20.proxies.AttributeConsumingService) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SAML20.AttributeConsumingService";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
