// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package saml20.proxies;

public class Contact
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject contactMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SAML20.Contact";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		contactType("contactType"),
		Company("Company"),
		GivenName("GivenName"),
		SurName("SurName"),
		ContactType_EntityDescriptor("SAML20.ContactType_EntityDescriptor"),
		RoleDescriptorType_ContactPerson("SAML20.RoleDescriptorType_ContactPerson");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Contact(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SAML20.Contact"));
	}

	protected Contact(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject contactMendixObject)
	{
		if (contactMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("SAML20.Contact", contactMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SAML20.Contact");

		this.contactMendixObject = contactMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Contact.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static saml20.proxies.Contact initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return saml20.proxies.Contact.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static saml20.proxies.Contact initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new saml20.proxies.Contact(context, mendixObject);
	}

	public static saml20.proxies.Contact load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return saml20.proxies.Contact.initialize(context, mendixObject);
	}

	public static java.util.List<saml20.proxies.Contact> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<saml20.proxies.Contact> result = new java.util.ArrayList<saml20.proxies.Contact>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//SAML20.Contact" + xpathConstraint))
			result.add(saml20.proxies.Contact.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of contactType
	 */
	public final java.lang.String getcontactType()
	{
		return getcontactType(getContext());
	}

	/**
	 * @param context
	 * @return value of contactType
	 */
	public final java.lang.String getcontactType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.contactType.toString());
	}

	/**
	 * Set value of contactType
	 * @param contacttype
	 */
	public final void setcontactType(java.lang.String contacttype)
	{
		setcontactType(getContext(), contacttype);
	}

	/**
	 * Set value of contactType
	 * @param context
	 * @param contacttype
	 */
	public final void setcontactType(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String contacttype)
	{
		getMendixObject().setValue(context, MemberNames.contactType.toString(), contacttype);
	}

	/**
	 * @return value of Company
	 */
	public final java.lang.String getCompany()
	{
		return getCompany(getContext());
	}

	/**
	 * @param context
	 * @return value of Company
	 */
	public final java.lang.String getCompany(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Company.toString());
	}

	/**
	 * Set value of Company
	 * @param company
	 */
	public final void setCompany(java.lang.String company)
	{
		setCompany(getContext(), company);
	}

	/**
	 * Set value of Company
	 * @param context
	 * @param company
	 */
	public final void setCompany(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String company)
	{
		getMendixObject().setValue(context, MemberNames.Company.toString(), company);
	}

	/**
	 * @return value of GivenName
	 */
	public final java.lang.String getGivenName()
	{
		return getGivenName(getContext());
	}

	/**
	 * @param context
	 * @return value of GivenName
	 */
	public final java.lang.String getGivenName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.GivenName.toString());
	}

	/**
	 * Set value of GivenName
	 * @param givenname
	 */
	public final void setGivenName(java.lang.String givenname)
	{
		setGivenName(getContext(), givenname);
	}

	/**
	 * Set value of GivenName
	 * @param context
	 * @param givenname
	 */
	public final void setGivenName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String givenname)
	{
		getMendixObject().setValue(context, MemberNames.GivenName.toString(), givenname);
	}

	/**
	 * @return value of SurName
	 */
	public final java.lang.String getSurName()
	{
		return getSurName(getContext());
	}

	/**
	 * @param context
	 * @return value of SurName
	 */
	public final java.lang.String getSurName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.SurName.toString());
	}

	/**
	 * Set value of SurName
	 * @param surname
	 */
	public final void setSurName(java.lang.String surname)
	{
		setSurName(getContext(), surname);
	}

	/**
	 * Set value of SurName
	 * @param context
	 * @param surname
	 */
	public final void setSurName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String surname)
	{
		getMendixObject().setValue(context, MemberNames.SurName.toString(), surname);
	}

	/**
	 * @return value of ContactType_EntityDescriptor
	 */
	public final saml20.proxies.EntityDescriptor getContactType_EntityDescriptor() throws com.mendix.core.CoreException
	{
		return getContactType_EntityDescriptor(getContext());
	}

	/**
	 * @param context
	 * @return value of ContactType_EntityDescriptor
	 */
	public final saml20.proxies.EntityDescriptor getContactType_EntityDescriptor(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		saml20.proxies.EntityDescriptor result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ContactType_EntityDescriptor.toString());
		if (identifier != null)
			result = saml20.proxies.EntityDescriptor.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ContactType_EntityDescriptor
	 * @param contacttype_entitydescriptor
	 */
	public final void setContactType_EntityDescriptor(saml20.proxies.EntityDescriptor contacttype_entitydescriptor)
	{
		setContactType_EntityDescriptor(getContext(), contacttype_entitydescriptor);
	}

	/**
	 * Set value of ContactType_EntityDescriptor
	 * @param context
	 * @param contacttype_entitydescriptor
	 */
	public final void setContactType_EntityDescriptor(com.mendix.systemwideinterfaces.core.IContext context, saml20.proxies.EntityDescriptor contacttype_entitydescriptor)
	{
		if (contacttype_entitydescriptor == null)
			getMendixObject().setValue(context, MemberNames.ContactType_EntityDescriptor.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ContactType_EntityDescriptor.toString(), contacttype_entitydescriptor.getMendixObject().getId());
	}

	/**
	 * @return value of RoleDescriptorType_ContactPerson
	 */
	public final saml20.proxies.RoleDescriptor getRoleDescriptorType_ContactPerson() throws com.mendix.core.CoreException
	{
		return getRoleDescriptorType_ContactPerson(getContext());
	}

	/**
	 * @param context
	 * @return value of RoleDescriptorType_ContactPerson
	 */
	public final saml20.proxies.RoleDescriptor getRoleDescriptorType_ContactPerson(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		saml20.proxies.RoleDescriptor result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RoleDescriptorType_ContactPerson.toString());
		if (identifier != null)
			result = saml20.proxies.RoleDescriptor.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RoleDescriptorType_ContactPerson
	 * @param roledescriptortype_contactperson
	 */
	public final void setRoleDescriptorType_ContactPerson(saml20.proxies.RoleDescriptor roledescriptortype_contactperson)
	{
		setRoleDescriptorType_ContactPerson(getContext(), roledescriptortype_contactperson);
	}

	/**
	 * Set value of RoleDescriptorType_ContactPerson
	 * @param context
	 * @param roledescriptortype_contactperson
	 */
	public final void setRoleDescriptorType_ContactPerson(com.mendix.systemwideinterfaces.core.IContext context, saml20.proxies.RoleDescriptor roledescriptortype_contactperson)
	{
		if (roledescriptortype_contactperson == null)
			getMendixObject().setValue(context, MemberNames.RoleDescriptorType_ContactPerson.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RoleDescriptorType_ContactPerson.toString(), roledescriptortype_contactperson.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return contactMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final saml20.proxies.Contact that = (saml20.proxies.Contact) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SAML20.Contact";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
