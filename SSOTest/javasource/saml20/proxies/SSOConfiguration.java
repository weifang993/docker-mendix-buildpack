// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package saml20.proxies;

public class SSOConfiguration
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject sSOConfigurationMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SAML20.SSOConfiguration";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		IsSAMLLoggingEnabled("IsSAMLLoggingEnabled"),
		AuthnContext("AuthnContext"),
		IdPMetadataURL("IdPMetadataURL"),
		ReadIdPMetadataFromURL("ReadIdPMetadataFromURL"),
		WizardMode("WizardMode"),
		CreateUsers("CreateUsers"),
		CurrentWizardStep("CurrentWizardStep"),
		Alias("Alias"),
		Active("Active"),
		AllowIdpInitiatedAuthentication("AllowIdpInitiatedAuthentication"),
		IdentifyingAssertionType("IdentifyingAssertionType"),
		CustomIdentifyingAssertionName("CustomIdentifyingAssertionName"),
		UseCustomLogicForProvisioning("UseCustomLogicForProvisioning"),
		UseCustomAfterSigninLogic("UseCustomAfterSigninLogic"),
		DisableNameIDPolicy("DisableNameIDPolicy"),
		EnableDelegatedAuthentication("EnableDelegatedAuthentication"),
		DelegatedAuthenticationURL("DelegatedAuthenticationURL"),
		EnableMobileAuthToken("EnableMobileAuthToken"),
		SSOConfiguration_SAMLAuthnContext("SAML20.SSOConfiguration_SAMLAuthnContext"),
		SSOConfiguration_IdPMetadata("SAML20.SSOConfiguration_IdPMetadata"),
		SSOConfiguration_Attribute("SAML20.SSOConfiguration_Attribute"),
		SSOConfiguration_PreferedEntityDescriptor("SAML20.SSOConfiguration_PreferedEntityDescriptor"),
		SSOConfiguration_NameIDFormat("SAML20.SSOConfiguration_NameIDFormat"),
		SSOConfiguration_MxObjectType("SAML20.SSOConfiguration_MxObjectType"),
		SSOConfiguration_MxObjectMember("SAML20.SSOConfiguration_MxObjectMember"),
		SSOConfiguration_DefaultUserRoleToAssign("SAML20.SSOConfiguration_DefaultUserRoleToAssign");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public SSOConfiguration(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SAML20.SSOConfiguration"));
	}

	protected SSOConfiguration(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject sSOConfigurationMendixObject)
	{
		if (sSOConfigurationMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("SAML20.SSOConfiguration", sSOConfigurationMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SAML20.SSOConfiguration");

		this.sSOConfigurationMendixObject = sSOConfigurationMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'SSOConfiguration.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static saml20.proxies.SSOConfiguration initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return saml20.proxies.SSOConfiguration.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static saml20.proxies.SSOConfiguration initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new saml20.proxies.SSOConfiguration(context, mendixObject);
	}

	public static saml20.proxies.SSOConfiguration load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return saml20.proxies.SSOConfiguration.initialize(context, mendixObject);
	}

	public static java.util.List<saml20.proxies.SSOConfiguration> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<saml20.proxies.SSOConfiguration> result = new java.util.ArrayList<saml20.proxies.SSOConfiguration>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//SAML20.SSOConfiguration" + xpathConstraint))
			result.add(saml20.proxies.SSOConfiguration.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of IsSAMLLoggingEnabled
	 */
	public final java.lang.Boolean getIsSAMLLoggingEnabled()
	{
		return getIsSAMLLoggingEnabled(getContext());
	}

	/**
	 * @param context
	 * @return value of IsSAMLLoggingEnabled
	 */
	public final java.lang.Boolean getIsSAMLLoggingEnabled(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsSAMLLoggingEnabled.toString());
	}

	/**
	 * Set value of IsSAMLLoggingEnabled
	 * @param issamlloggingenabled
	 */
	public final void setIsSAMLLoggingEnabled(java.lang.Boolean issamlloggingenabled)
	{
		setIsSAMLLoggingEnabled(getContext(), issamlloggingenabled);
	}

	/**
	 * Set value of IsSAMLLoggingEnabled
	 * @param context
	 * @param issamlloggingenabled
	 */
	public final void setIsSAMLLoggingEnabled(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean issamlloggingenabled)
	{
		getMendixObject().setValue(context, MemberNames.IsSAMLLoggingEnabled.toString(), issamlloggingenabled);
	}

	/**
	 * Set value of AuthnContext
	 * @param authncontext
	 */
	public final saml20.proxies.TypeOfAuthnContext getAuthnContext()
	{
		return getAuthnContext(getContext());
	}

	/**
	 * @param context
	 * @return value of AuthnContext
	 */
	public final saml20.proxies.TypeOfAuthnContext getAuthnContext(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.AuthnContext.toString());
		if (obj == null)
			return null;

		return saml20.proxies.TypeOfAuthnContext.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of AuthnContext
	 * @param authncontext
	 */
	public final void setAuthnContext(saml20.proxies.TypeOfAuthnContext authncontext)
	{
		setAuthnContext(getContext(), authncontext);
	}

	/**
	 * Set value of AuthnContext
	 * @param context
	 * @param authncontext
	 */
	public final void setAuthnContext(com.mendix.systemwideinterfaces.core.IContext context, saml20.proxies.TypeOfAuthnContext authncontext)
	{
		if (authncontext != null)
			getMendixObject().setValue(context, MemberNames.AuthnContext.toString(), authncontext.toString());
		else
			getMendixObject().setValue(context, MemberNames.AuthnContext.toString(), null);
	}

	/**
	 * @return value of IdPMetadataURL
	 */
	public final java.lang.String getIdPMetadataURL()
	{
		return getIdPMetadataURL(getContext());
	}

	/**
	 * @param context
	 * @return value of IdPMetadataURL
	 */
	public final java.lang.String getIdPMetadataURL(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.IdPMetadataURL.toString());
	}

	/**
	 * Set value of IdPMetadataURL
	 * @param idpmetadataurl
	 */
	public final void setIdPMetadataURL(java.lang.String idpmetadataurl)
	{
		setIdPMetadataURL(getContext(), idpmetadataurl);
	}

	/**
	 * Set value of IdPMetadataURL
	 * @param context
	 * @param idpmetadataurl
	 */
	public final void setIdPMetadataURL(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String idpmetadataurl)
	{
		getMendixObject().setValue(context, MemberNames.IdPMetadataURL.toString(), idpmetadataurl);
	}

	/**
	 * @return value of ReadIdPMetadataFromURL
	 */
	public final java.lang.Boolean getReadIdPMetadataFromURL()
	{
		return getReadIdPMetadataFromURL(getContext());
	}

	/**
	 * @param context
	 * @return value of ReadIdPMetadataFromURL
	 */
	public final java.lang.Boolean getReadIdPMetadataFromURL(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ReadIdPMetadataFromURL.toString());
	}

	/**
	 * Set value of ReadIdPMetadataFromURL
	 * @param readidpmetadatafromurl
	 */
	public final void setReadIdPMetadataFromURL(java.lang.Boolean readidpmetadatafromurl)
	{
		setReadIdPMetadataFromURL(getContext(), readidpmetadatafromurl);
	}

	/**
	 * Set value of ReadIdPMetadataFromURL
	 * @param context
	 * @param readidpmetadatafromurl
	 */
	public final void setReadIdPMetadataFromURL(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean readidpmetadatafromurl)
	{
		getMendixObject().setValue(context, MemberNames.ReadIdPMetadataFromURL.toString(), readidpmetadatafromurl);
	}

	/**
	 * @return value of WizardMode
	 */
	public final java.lang.Boolean getWizardMode()
	{
		return getWizardMode(getContext());
	}

	/**
	 * @param context
	 * @return value of WizardMode
	 */
	public final java.lang.Boolean getWizardMode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.WizardMode.toString());
	}

	/**
	 * Set value of WizardMode
	 * @param wizardmode
	 */
	public final void setWizardMode(java.lang.Boolean wizardmode)
	{
		setWizardMode(getContext(), wizardmode);
	}

	/**
	 * Set value of WizardMode
	 * @param context
	 * @param wizardmode
	 */
	public final void setWizardMode(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean wizardmode)
	{
		getMendixObject().setValue(context, MemberNames.WizardMode.toString(), wizardmode);
	}

	/**
	 * @return value of CreateUsers
	 */
	public final java.lang.Boolean getCreateUsers()
	{
		return getCreateUsers(getContext());
	}

	/**
	 * @param context
	 * @return value of CreateUsers
	 */
	public final java.lang.Boolean getCreateUsers(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.CreateUsers.toString());
	}

	/**
	 * Set value of CreateUsers
	 * @param createusers
	 */
	public final void setCreateUsers(java.lang.Boolean createusers)
	{
		setCreateUsers(getContext(), createusers);
	}

	/**
	 * Set value of CreateUsers
	 * @param context
	 * @param createusers
	 */
	public final void setCreateUsers(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean createusers)
	{
		getMendixObject().setValue(context, MemberNames.CreateUsers.toString(), createusers);
	}

	/**
	 * Set value of CurrentWizardStep
	 * @param currentwizardstep
	 */
	public final saml20.proxies.WizardStepCollection getCurrentWizardStep()
	{
		return getCurrentWizardStep(getContext());
	}

	/**
	 * @param context
	 * @return value of CurrentWizardStep
	 */
	public final saml20.proxies.WizardStepCollection getCurrentWizardStep(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.CurrentWizardStep.toString());
		if (obj == null)
			return null;

		return saml20.proxies.WizardStepCollection.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of CurrentWizardStep
	 * @param currentwizardstep
	 */
	public final void setCurrentWizardStep(saml20.proxies.WizardStepCollection currentwizardstep)
	{
		setCurrentWizardStep(getContext(), currentwizardstep);
	}

	/**
	 * Set value of CurrentWizardStep
	 * @param context
	 * @param currentwizardstep
	 */
	public final void setCurrentWizardStep(com.mendix.systemwideinterfaces.core.IContext context, saml20.proxies.WizardStepCollection currentwizardstep)
	{
		if (currentwizardstep != null)
			getMendixObject().setValue(context, MemberNames.CurrentWizardStep.toString(), currentwizardstep.toString());
		else
			getMendixObject().setValue(context, MemberNames.CurrentWizardStep.toString(), null);
	}

	/**
	 * @return value of Alias
	 */
	public final java.lang.String getAlias()
	{
		return getAlias(getContext());
	}

	/**
	 * @param context
	 * @return value of Alias
	 */
	public final java.lang.String getAlias(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Alias.toString());
	}

	/**
	 * Set value of Alias
	 * @param alias
	 */
	public final void setAlias(java.lang.String alias)
	{
		setAlias(getContext(), alias);
	}

	/**
	 * Set value of Alias
	 * @param context
	 * @param alias
	 */
	public final void setAlias(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String alias)
	{
		getMendixObject().setValue(context, MemberNames.Alias.toString(), alias);
	}

	/**
	 * @return value of Active
	 */
	public final java.lang.Boolean getActive()
	{
		return getActive(getContext());
	}

	/**
	 * @param context
	 * @return value of Active
	 */
	public final java.lang.Boolean getActive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Active.toString());
	}

	/**
	 * Set value of Active
	 * @param active
	 */
	public final void setActive(java.lang.Boolean active)
	{
		setActive(getContext(), active);
	}

	/**
	 * Set value of Active
	 * @param context
	 * @param active
	 */
	public final void setActive(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean active)
	{
		getMendixObject().setValue(context, MemberNames.Active.toString(), active);
	}

	/**
	 * @return value of AllowIdpInitiatedAuthentication
	 */
	public final java.lang.Boolean getAllowIdpInitiatedAuthentication()
	{
		return getAllowIdpInitiatedAuthentication(getContext());
	}

	/**
	 * @param context
	 * @return value of AllowIdpInitiatedAuthentication
	 */
	public final java.lang.Boolean getAllowIdpInitiatedAuthentication(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AllowIdpInitiatedAuthentication.toString());
	}

	/**
	 * Set value of AllowIdpInitiatedAuthentication
	 * @param allowidpinitiatedauthentication
	 */
	public final void setAllowIdpInitiatedAuthentication(java.lang.Boolean allowidpinitiatedauthentication)
	{
		setAllowIdpInitiatedAuthentication(getContext(), allowidpinitiatedauthentication);
	}

	/**
	 * Set value of AllowIdpInitiatedAuthentication
	 * @param context
	 * @param allowidpinitiatedauthentication
	 */
	public final void setAllowIdpInitiatedAuthentication(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean allowidpinitiatedauthentication)
	{
		getMendixObject().setValue(context, MemberNames.AllowIdpInitiatedAuthentication.toString(), allowidpinitiatedauthentication);
	}

	/**
	 * Set value of IdentifyingAssertionType
	 * @param identifyingassertiontype
	 */
	public final saml20.proxies.IdentifyingAssertionType getIdentifyingAssertionType()
	{
		return getIdentifyingAssertionType(getContext());
	}

	/**
	 * @param context
	 * @return value of IdentifyingAssertionType
	 */
	public final saml20.proxies.IdentifyingAssertionType getIdentifyingAssertionType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.IdentifyingAssertionType.toString());
		if (obj == null)
			return null;

		return saml20.proxies.IdentifyingAssertionType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of IdentifyingAssertionType
	 * @param identifyingassertiontype
	 */
	public final void setIdentifyingAssertionType(saml20.proxies.IdentifyingAssertionType identifyingassertiontype)
	{
		setIdentifyingAssertionType(getContext(), identifyingassertiontype);
	}

	/**
	 * Set value of IdentifyingAssertionType
	 * @param context
	 * @param identifyingassertiontype
	 */
	public final void setIdentifyingAssertionType(com.mendix.systemwideinterfaces.core.IContext context, saml20.proxies.IdentifyingAssertionType identifyingassertiontype)
	{
		if (identifyingassertiontype != null)
			getMendixObject().setValue(context, MemberNames.IdentifyingAssertionType.toString(), identifyingassertiontype.toString());
		else
			getMendixObject().setValue(context, MemberNames.IdentifyingAssertionType.toString(), null);
	}

	/**
	 * @return value of CustomIdentifyingAssertionName
	 */
	public final java.lang.String getCustomIdentifyingAssertionName()
	{
		return getCustomIdentifyingAssertionName(getContext());
	}

	/**
	 * @param context
	 * @return value of CustomIdentifyingAssertionName
	 */
	public final java.lang.String getCustomIdentifyingAssertionName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.CustomIdentifyingAssertionName.toString());
	}

	/**
	 * Set value of CustomIdentifyingAssertionName
	 * @param customidentifyingassertionname
	 */
	public final void setCustomIdentifyingAssertionName(java.lang.String customidentifyingassertionname)
	{
		setCustomIdentifyingAssertionName(getContext(), customidentifyingassertionname);
	}

	/**
	 * Set value of CustomIdentifyingAssertionName
	 * @param context
	 * @param customidentifyingassertionname
	 */
	public final void setCustomIdentifyingAssertionName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String customidentifyingassertionname)
	{
		getMendixObject().setValue(context, MemberNames.CustomIdentifyingAssertionName.toString(), customidentifyingassertionname);
	}

	/**
	 * @return value of UseCustomLogicForProvisioning
	 */
	public final java.lang.Boolean getUseCustomLogicForProvisioning()
	{
		return getUseCustomLogicForProvisioning(getContext());
	}

	/**
	 * @param context
	 * @return value of UseCustomLogicForProvisioning
	 */
	public final java.lang.Boolean getUseCustomLogicForProvisioning(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.UseCustomLogicForProvisioning.toString());
	}

	/**
	 * Set value of UseCustomLogicForProvisioning
	 * @param usecustomlogicforprovisioning
	 */
	public final void setUseCustomLogicForProvisioning(java.lang.Boolean usecustomlogicforprovisioning)
	{
		setUseCustomLogicForProvisioning(getContext(), usecustomlogicforprovisioning);
	}

	/**
	 * Set value of UseCustomLogicForProvisioning
	 * @param context
	 * @param usecustomlogicforprovisioning
	 */
	public final void setUseCustomLogicForProvisioning(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean usecustomlogicforprovisioning)
	{
		getMendixObject().setValue(context, MemberNames.UseCustomLogicForProvisioning.toString(), usecustomlogicforprovisioning);
	}

	/**
	 * @return value of UseCustomAfterSigninLogic
	 */
	public final java.lang.Boolean getUseCustomAfterSigninLogic()
	{
		return getUseCustomAfterSigninLogic(getContext());
	}

	/**
	 * @param context
	 * @return value of UseCustomAfterSigninLogic
	 */
	public final java.lang.Boolean getUseCustomAfterSigninLogic(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.UseCustomAfterSigninLogic.toString());
	}

	/**
	 * Set value of UseCustomAfterSigninLogic
	 * @param usecustomaftersigninlogic
	 */
	public final void setUseCustomAfterSigninLogic(java.lang.Boolean usecustomaftersigninlogic)
	{
		setUseCustomAfterSigninLogic(getContext(), usecustomaftersigninlogic);
	}

	/**
	 * Set value of UseCustomAfterSigninLogic
	 * @param context
	 * @param usecustomaftersigninlogic
	 */
	public final void setUseCustomAfterSigninLogic(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean usecustomaftersigninlogic)
	{
		getMendixObject().setValue(context, MemberNames.UseCustomAfterSigninLogic.toString(), usecustomaftersigninlogic);
	}

	/**
	 * @return value of DisableNameIDPolicy
	 */
	public final java.lang.Boolean getDisableNameIDPolicy()
	{
		return getDisableNameIDPolicy(getContext());
	}

	/**
	 * @param context
	 * @return value of DisableNameIDPolicy
	 */
	public final java.lang.Boolean getDisableNameIDPolicy(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.DisableNameIDPolicy.toString());
	}

	/**
	 * Set value of DisableNameIDPolicy
	 * @param disablenameidpolicy
	 */
	public final void setDisableNameIDPolicy(java.lang.Boolean disablenameidpolicy)
	{
		setDisableNameIDPolicy(getContext(), disablenameidpolicy);
	}

	/**
	 * Set value of DisableNameIDPolicy
	 * @param context
	 * @param disablenameidpolicy
	 */
	public final void setDisableNameIDPolicy(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean disablenameidpolicy)
	{
		getMendixObject().setValue(context, MemberNames.DisableNameIDPolicy.toString(), disablenameidpolicy);
	}

	/**
	 * @return value of EnableDelegatedAuthentication
	 */
	public final java.lang.Boolean getEnableDelegatedAuthentication()
	{
		return getEnableDelegatedAuthentication(getContext());
	}

	/**
	 * @param context
	 * @return value of EnableDelegatedAuthentication
	 */
	public final java.lang.Boolean getEnableDelegatedAuthentication(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.EnableDelegatedAuthentication.toString());
	}

	/**
	 * Set value of EnableDelegatedAuthentication
	 * @param enabledelegatedauthentication
	 */
	public final void setEnableDelegatedAuthentication(java.lang.Boolean enabledelegatedauthentication)
	{
		setEnableDelegatedAuthentication(getContext(), enabledelegatedauthentication);
	}

	/**
	 * Set value of EnableDelegatedAuthentication
	 * @param context
	 * @param enabledelegatedauthentication
	 */
	public final void setEnableDelegatedAuthentication(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean enabledelegatedauthentication)
	{
		getMendixObject().setValue(context, MemberNames.EnableDelegatedAuthentication.toString(), enabledelegatedauthentication);
	}

	/**
	 * @return value of DelegatedAuthenticationURL
	 */
	public final java.lang.String getDelegatedAuthenticationURL()
	{
		return getDelegatedAuthenticationURL(getContext());
	}

	/**
	 * @param context
	 * @return value of DelegatedAuthenticationURL
	 */
	public final java.lang.String getDelegatedAuthenticationURL(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DelegatedAuthenticationURL.toString());
	}

	/**
	 * Set value of DelegatedAuthenticationURL
	 * @param delegatedauthenticationurl
	 */
	public final void setDelegatedAuthenticationURL(java.lang.String delegatedauthenticationurl)
	{
		setDelegatedAuthenticationURL(getContext(), delegatedauthenticationurl);
	}

	/**
	 * Set value of DelegatedAuthenticationURL
	 * @param context
	 * @param delegatedauthenticationurl
	 */
	public final void setDelegatedAuthenticationURL(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String delegatedauthenticationurl)
	{
		getMendixObject().setValue(context, MemberNames.DelegatedAuthenticationURL.toString(), delegatedauthenticationurl);
	}

	/**
	 * @return value of EnableMobileAuthToken
	 */
	public final java.lang.Boolean getEnableMobileAuthToken()
	{
		return getEnableMobileAuthToken(getContext());
	}

	/**
	 * @param context
	 * @return value of EnableMobileAuthToken
	 */
	public final java.lang.Boolean getEnableMobileAuthToken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.EnableMobileAuthToken.toString());
	}

	/**
	 * Set value of EnableMobileAuthToken
	 * @param enablemobileauthtoken
	 */
	public final void setEnableMobileAuthToken(java.lang.Boolean enablemobileauthtoken)
	{
		setEnableMobileAuthToken(getContext(), enablemobileauthtoken);
	}

	/**
	 * Set value of EnableMobileAuthToken
	 * @param context
	 * @param enablemobileauthtoken
	 */
	public final void setEnableMobileAuthToken(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean enablemobileauthtoken)
	{
		getMendixObject().setValue(context, MemberNames.EnableMobileAuthToken.toString(), enablemobileauthtoken);
	}

	/**
	 * @return value of SSOConfiguration_SAMLAuthnContext
	 */
	public final java.util.List<saml20.proxies.SAMLAuthnContext> getSSOConfiguration_SAMLAuthnContext() throws com.mendix.core.CoreException
	{
		return getSSOConfiguration_SAMLAuthnContext(getContext());
	}

	/**
	 * @param context
	 * @return value of SSOConfiguration_SAMLAuthnContext
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<saml20.proxies.SAMLAuthnContext> getSSOConfiguration_SAMLAuthnContext(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<saml20.proxies.SAMLAuthnContext> result = new java.util.ArrayList<saml20.proxies.SAMLAuthnContext>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.SSOConfiguration_SAMLAuthnContext.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(saml20.proxies.SAMLAuthnContext.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of SSOConfiguration_SAMLAuthnContext
	 * @param ssoconfiguration_samlauthncontext
	 */
	public final void setSSOConfiguration_SAMLAuthnContext(java.util.List<saml20.proxies.SAMLAuthnContext> ssoconfiguration_samlauthncontext)
	{
		setSSOConfiguration_SAMLAuthnContext(getContext(), ssoconfiguration_samlauthncontext);
	}

	/**
	 * Set value of SSOConfiguration_SAMLAuthnContext
	 * @param context
	 * @param ssoconfiguration_samlauthncontext
	 */
	public final void setSSOConfiguration_SAMLAuthnContext(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<saml20.proxies.SAMLAuthnContext> ssoconfiguration_samlauthncontext)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (saml20.proxies.SAMLAuthnContext proxyObject : ssoconfiguration_samlauthncontext)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.SSOConfiguration_SAMLAuthnContext.toString(), identifiers);
	}

	/**
	 * @return value of SSOConfiguration_IdPMetadata
	 */
	public final saml20.proxies.IdPMetadata getSSOConfiguration_IdPMetadata() throws com.mendix.core.CoreException
	{
		return getSSOConfiguration_IdPMetadata(getContext());
	}

	/**
	 * @param context
	 * @return value of SSOConfiguration_IdPMetadata
	 */
	public final saml20.proxies.IdPMetadata getSSOConfiguration_IdPMetadata(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		saml20.proxies.IdPMetadata result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SSOConfiguration_IdPMetadata.toString());
		if (identifier != null)
			result = saml20.proxies.IdPMetadata.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SSOConfiguration_IdPMetadata
	 * @param ssoconfiguration_idpmetadata
	 */
	public final void setSSOConfiguration_IdPMetadata(saml20.proxies.IdPMetadata ssoconfiguration_idpmetadata)
	{
		setSSOConfiguration_IdPMetadata(getContext(), ssoconfiguration_idpmetadata);
	}

	/**
	 * Set value of SSOConfiguration_IdPMetadata
	 * @param context
	 * @param ssoconfiguration_idpmetadata
	 */
	public final void setSSOConfiguration_IdPMetadata(com.mendix.systemwideinterfaces.core.IContext context, saml20.proxies.IdPMetadata ssoconfiguration_idpmetadata)
	{
		if (ssoconfiguration_idpmetadata == null)
			getMendixObject().setValue(context, MemberNames.SSOConfiguration_IdPMetadata.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SSOConfiguration_IdPMetadata.toString(), ssoconfiguration_idpmetadata.getMendixObject().getId());
	}

	/**
	 * @return value of SSOConfiguration_Attribute
	 */
	public final saml20.proxies.Attribute getSSOConfiguration_Attribute() throws com.mendix.core.CoreException
	{
		return getSSOConfiguration_Attribute(getContext());
	}

	/**
	 * @param context
	 * @return value of SSOConfiguration_Attribute
	 */
	public final saml20.proxies.Attribute getSSOConfiguration_Attribute(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		saml20.proxies.Attribute result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SSOConfiguration_Attribute.toString());
		if (identifier != null)
			result = saml20.proxies.Attribute.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SSOConfiguration_Attribute
	 * @param ssoconfiguration_attribute
	 */
	public final void setSSOConfiguration_Attribute(saml20.proxies.Attribute ssoconfiguration_attribute)
	{
		setSSOConfiguration_Attribute(getContext(), ssoconfiguration_attribute);
	}

	/**
	 * Set value of SSOConfiguration_Attribute
	 * @param context
	 * @param ssoconfiguration_attribute
	 */
	public final void setSSOConfiguration_Attribute(com.mendix.systemwideinterfaces.core.IContext context, saml20.proxies.Attribute ssoconfiguration_attribute)
	{
		if (ssoconfiguration_attribute == null)
			getMendixObject().setValue(context, MemberNames.SSOConfiguration_Attribute.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SSOConfiguration_Attribute.toString(), ssoconfiguration_attribute.getMendixObject().getId());
	}

	/**
	 * @return value of SSOConfiguration_PreferedEntityDescriptor
	 */
	public final saml20.proxies.EntityDescriptor getSSOConfiguration_PreferedEntityDescriptor() throws com.mendix.core.CoreException
	{
		return getSSOConfiguration_PreferedEntityDescriptor(getContext());
	}

	/**
	 * @param context
	 * @return value of SSOConfiguration_PreferedEntityDescriptor
	 */
	public final saml20.proxies.EntityDescriptor getSSOConfiguration_PreferedEntityDescriptor(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		saml20.proxies.EntityDescriptor result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SSOConfiguration_PreferedEntityDescriptor.toString());
		if (identifier != null)
			result = saml20.proxies.EntityDescriptor.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SSOConfiguration_PreferedEntityDescriptor
	 * @param ssoconfiguration_preferedentitydescriptor
	 */
	public final void setSSOConfiguration_PreferedEntityDescriptor(saml20.proxies.EntityDescriptor ssoconfiguration_preferedentitydescriptor)
	{
		setSSOConfiguration_PreferedEntityDescriptor(getContext(), ssoconfiguration_preferedentitydescriptor);
	}

	/**
	 * Set value of SSOConfiguration_PreferedEntityDescriptor
	 * @param context
	 * @param ssoconfiguration_preferedentitydescriptor
	 */
	public final void setSSOConfiguration_PreferedEntityDescriptor(com.mendix.systemwideinterfaces.core.IContext context, saml20.proxies.EntityDescriptor ssoconfiguration_preferedentitydescriptor)
	{
		if (ssoconfiguration_preferedentitydescriptor == null)
			getMendixObject().setValue(context, MemberNames.SSOConfiguration_PreferedEntityDescriptor.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SSOConfiguration_PreferedEntityDescriptor.toString(), ssoconfiguration_preferedentitydescriptor.getMendixObject().getId());
	}

	/**
	 * @return value of SSOConfiguration_NameIDFormat
	 */
	public final saml20.proxies.NameIDFormat getSSOConfiguration_NameIDFormat() throws com.mendix.core.CoreException
	{
		return getSSOConfiguration_NameIDFormat(getContext());
	}

	/**
	 * @param context
	 * @return value of SSOConfiguration_NameIDFormat
	 */
	public final saml20.proxies.NameIDFormat getSSOConfiguration_NameIDFormat(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		saml20.proxies.NameIDFormat result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SSOConfiguration_NameIDFormat.toString());
		if (identifier != null)
			result = saml20.proxies.NameIDFormat.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SSOConfiguration_NameIDFormat
	 * @param ssoconfiguration_nameidformat
	 */
	public final void setSSOConfiguration_NameIDFormat(saml20.proxies.NameIDFormat ssoconfiguration_nameidformat)
	{
		setSSOConfiguration_NameIDFormat(getContext(), ssoconfiguration_nameidformat);
	}

	/**
	 * Set value of SSOConfiguration_NameIDFormat
	 * @param context
	 * @param ssoconfiguration_nameidformat
	 */
	public final void setSSOConfiguration_NameIDFormat(com.mendix.systemwideinterfaces.core.IContext context, saml20.proxies.NameIDFormat ssoconfiguration_nameidformat)
	{
		if (ssoconfiguration_nameidformat == null)
			getMendixObject().setValue(context, MemberNames.SSOConfiguration_NameIDFormat.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SSOConfiguration_NameIDFormat.toString(), ssoconfiguration_nameidformat.getMendixObject().getId());
	}

	/**
	 * @return value of SSOConfiguration_MxObjectType
	 */
	public final mxmodelreflection.proxies.MxObjectType getSSOConfiguration_MxObjectType() throws com.mendix.core.CoreException
	{
		return getSSOConfiguration_MxObjectType(getContext());
	}

	/**
	 * @param context
	 * @return value of SSOConfiguration_MxObjectType
	 */
	public final mxmodelreflection.proxies.MxObjectType getSSOConfiguration_MxObjectType(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mxmodelreflection.proxies.MxObjectType result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SSOConfiguration_MxObjectType.toString());
		if (identifier != null)
			result = mxmodelreflection.proxies.MxObjectType.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SSOConfiguration_MxObjectType
	 * @param ssoconfiguration_mxobjecttype
	 */
	public final void setSSOConfiguration_MxObjectType(mxmodelreflection.proxies.MxObjectType ssoconfiguration_mxobjecttype)
	{
		setSSOConfiguration_MxObjectType(getContext(), ssoconfiguration_mxobjecttype);
	}

	/**
	 * Set value of SSOConfiguration_MxObjectType
	 * @param context
	 * @param ssoconfiguration_mxobjecttype
	 */
	public final void setSSOConfiguration_MxObjectType(com.mendix.systemwideinterfaces.core.IContext context, mxmodelreflection.proxies.MxObjectType ssoconfiguration_mxobjecttype)
	{
		if (ssoconfiguration_mxobjecttype == null)
			getMendixObject().setValue(context, MemberNames.SSOConfiguration_MxObjectType.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SSOConfiguration_MxObjectType.toString(), ssoconfiguration_mxobjecttype.getMendixObject().getId());
	}

	/**
	 * @return value of SSOConfiguration_MxObjectMember
	 */
	public final mxmodelreflection.proxies.MxObjectMember getSSOConfiguration_MxObjectMember() throws com.mendix.core.CoreException
	{
		return getSSOConfiguration_MxObjectMember(getContext());
	}

	/**
	 * @param context
	 * @return value of SSOConfiguration_MxObjectMember
	 */
	public final mxmodelreflection.proxies.MxObjectMember getSSOConfiguration_MxObjectMember(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mxmodelreflection.proxies.MxObjectMember result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SSOConfiguration_MxObjectMember.toString());
		if (identifier != null)
			result = mxmodelreflection.proxies.MxObjectMember.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SSOConfiguration_MxObjectMember
	 * @param ssoconfiguration_mxobjectmember
	 */
	public final void setSSOConfiguration_MxObjectMember(mxmodelreflection.proxies.MxObjectMember ssoconfiguration_mxobjectmember)
	{
		setSSOConfiguration_MxObjectMember(getContext(), ssoconfiguration_mxobjectmember);
	}

	/**
	 * Set value of SSOConfiguration_MxObjectMember
	 * @param context
	 * @param ssoconfiguration_mxobjectmember
	 */
	public final void setSSOConfiguration_MxObjectMember(com.mendix.systemwideinterfaces.core.IContext context, mxmodelreflection.proxies.MxObjectMember ssoconfiguration_mxobjectmember)
	{
		if (ssoconfiguration_mxobjectmember == null)
			getMendixObject().setValue(context, MemberNames.SSOConfiguration_MxObjectMember.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SSOConfiguration_MxObjectMember.toString(), ssoconfiguration_mxobjectmember.getMendixObject().getId());
	}

	/**
	 * @return value of SSOConfiguration_DefaultUserRoleToAssign
	 */
	public final system.proxies.UserRole getSSOConfiguration_DefaultUserRoleToAssign() throws com.mendix.core.CoreException
	{
		return getSSOConfiguration_DefaultUserRoleToAssign(getContext());
	}

	/**
	 * @param context
	 * @return value of SSOConfiguration_DefaultUserRoleToAssign
	 */
	public final system.proxies.UserRole getSSOConfiguration_DefaultUserRoleToAssign(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.UserRole result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SSOConfiguration_DefaultUserRoleToAssign.toString());
		if (identifier != null)
			result = system.proxies.UserRole.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SSOConfiguration_DefaultUserRoleToAssign
	 * @param ssoconfiguration_defaultuserroletoassign
	 */
	public final void setSSOConfiguration_DefaultUserRoleToAssign(system.proxies.UserRole ssoconfiguration_defaultuserroletoassign)
	{
		setSSOConfiguration_DefaultUserRoleToAssign(getContext(), ssoconfiguration_defaultuserroletoassign);
	}

	/**
	 * Set value of SSOConfiguration_DefaultUserRoleToAssign
	 * @param context
	 * @param ssoconfiguration_defaultuserroletoassign
	 */
	public final void setSSOConfiguration_DefaultUserRoleToAssign(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.UserRole ssoconfiguration_defaultuserroletoassign)
	{
		if (ssoconfiguration_defaultuserroletoassign == null)
			getMendixObject().setValue(context, MemberNames.SSOConfiguration_DefaultUserRoleToAssign.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SSOConfiguration_DefaultUserRoleToAssign.toString(), ssoconfiguration_defaultuserroletoassign.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return sSOConfigurationMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final saml20.proxies.SSOConfiguration that = (saml20.proxies.SSOConfiguration) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SAML20.SSOConfiguration";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
