// This file was generated by Mendix Modeler 7.22.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package saml20.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the SAML20 module
	public static void aCo_ADe_ClaimMap(IContext context, saml20.proxies.ClaimMap _claimMap)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ClaimMap", _claimMap == null ? null : _claimMap.getMendixObject());
			Core.execute(context, "SAML20.ACo_ADe_ClaimMap", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void checkADFSDefaults(IContext context, saml20.proxies.EntityDescriptor _entitiesDescriptor_adfs, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EntitiesDescriptor_adfs", _entitiesDescriptor_adfs == null ? null : _entitiesDescriptor_adfs.getMendixObject());
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.CheckADFSDefaults", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void customAfterSigninLogic(IContext context, system.proxies.Session _previousSession, system.proxies.Session _newSession, system.proxies.User _previousUser, system.proxies.User _newUser)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PreviousSession", _previousSession == null ? null : _previousSession.getMendixObject());
			params.put("NewSession", _newSession == null ? null : _newSession.getMendixObject());
			params.put("PreviousUser", _previousUser == null ? null : _previousUser.getMendixObject());
			params.put("NewUser", _newUser == null ? null : _newUser.getMendixObject());
			Core.execute(context, "SAML20.CustomAfterSigninLogic", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.LoginFeedback customUserProvisioning(IContext context, saml20.proxies.SAMLSession _sAMLSession, system.proxies.User _user, saml20.proxies.SSOConfiguration _sSOConfiguration, java.util.List<saml20.proxies.AssertionAttribute> _assertionAttributeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SAMLSession", _sAMLSession == null ? null : _sAMLSession.getMendixObject());
			params.put("User", _user == null ? null : _user.getMendixObject());
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_assertionAttributeList = null;
			if (_assertionAttributeList != null)
			{
				listparam_assertionAttributeList = new java.util.ArrayList<IMendixObject>();
				for (saml20.proxies.AssertionAttribute obj : _assertionAttributeList)
					listparam_assertionAttributeList.add(obj.getMendixObject());
			}
			params.put("AssertionAttributeList", listparam_assertionAttributeList);
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.CustomUserProvisioning", params);
			return result == null ? null : saml20.proxies.LoginFeedback.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.KeyDescriptor dS_GetKeyDescriptor(IContext context, saml20.proxies.KeyInfo _keyInfo)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("KeyInfo", _keyInfo == null ? null : _keyInfo.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.DS_GetKeyDescriptor", params);
			return result == null ? null : saml20.proxies.KeyDescriptor.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.SPMetadata dS_GetSPMetadata(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.DS_GetSPMetadata", params);
			return result == null ? null : saml20.proxies.SPMetadata.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.KeyStore dS_SPCertificate(IContext context, saml20.proxies.SPMetadata _sPMetadata)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SPMetadata", _sPMetadata == null ? null : _sPMetadata.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.DS_SPCertificate", params);
			return result == null ? null : saml20.proxies.KeyStore.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static system.proxies.User evaluateMultipleUserMatches(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration, java.util.List<saml20.proxies.AssertionAttribute> _assertionAttributeList, java.util.List<system.proxies.User> _matchingUserList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_assertionAttributeList = null;
			if (_assertionAttributeList != null)
			{
				listparam_assertionAttributeList = new java.util.ArrayList<IMendixObject>();
				for (saml20.proxies.AssertionAttribute obj : _assertionAttributeList)
					listparam_assertionAttributeList.add(obj.getMendixObject());
			}
			params.put("AssertionAttributeList", listparam_assertionAttributeList);
			java.util.ArrayList<IMendixObject> listparam_matchingUserList = null;
			if (_matchingUserList != null)
			{
				listparam_matchingUserList = new java.util.ArrayList<IMendixObject>();
				for (system.proxies.User obj : _matchingUserList)
					listparam_matchingUserList.add(obj.getMendixObject());
			}
			params.put("MatchingUserList", listparam_matchingUserList);
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.evaluateMultipleUserMatches", params);
			return result == null ? null : system.proxies.User.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void extractMetadataFromObject(IContext context, saml20.proxies.IdPMetadata _idPMetadata)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IdPMetadata", _idPMetadata == null ? null : _idPMetadata.getMendixObject());
			Core.execute(context, "SAML20.ExtractMetadataFromObject", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.Attribute getAttribute(IContext context, java.lang.String _name, java.lang.String _friendlyName)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Name", _name);
			params.put("FriendlyName", _friendlyName);
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.GetAttribute", params);
			return result == null ? null : saml20.proxies.Attribute.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void idPMetadata_Refresh(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.IdPMetadata_Refresh", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void importIDPFile(IContext context, saml20.proxies.IdPMetadata _fileDocument)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FileDocument", _fileDocument == null ? null : _fileDocument.getMendixObject());
			Core.execute(context, "SAML20.ImportIDPFile", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.Endpoint m_AssertionConsumerService(IContext context, java.lang.String _binding)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Binding", _binding);
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.M_AssertionConsumerService", params);
			return result == null ? null : saml20.proxies.Endpoint.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.Endpoint m_GetArtifactResolutionService(IContext context, java.lang.String _binding)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Binding", _binding);
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.M_GetArtifactResolutionService", params);
			return result == null ? null : saml20.proxies.Endpoint.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.Endpoint m_GetAssertionIDRequestService(IContext context, java.lang.String _binding)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Binding", _binding);
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.M_GetAssertionIDRequestService", params);
			return result == null ? null : saml20.proxies.Endpoint.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.Attribute m_GetAttribute(IContext context, saml20.proxies.IdPMetadata _idPMetadata, java.lang.String _name, java.lang.String _friendlyName)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IdPMetadata", _idPMetadata == null ? null : _idPMetadata.getMendixObject());
			params.put("Name", _name);
			params.put("FriendlyName", _friendlyName);
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.M_GetAttribute", params);
			return result == null ? null : saml20.proxies.Attribute.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.RoleDescriptor m_GetAttributeAuthorityDescriptor(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.M_GetAttributeAuthorityDescriptor", params);
			return result == null ? null : saml20.proxies.RoleDescriptor.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.Endpoint m_GetAttributeService(IContext context, java.lang.String _binding)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Binding", _binding);
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.M_GetAttributeService", params);
			return result == null ? null : saml20.proxies.Endpoint.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.EntitiesDescriptor m_GetEntitiesDescriptor(IContext context, saml20.proxies.IdPMetadata _idPMetadata, java.lang.String _iD, java.lang.String _name)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IdPMetadata", _idPMetadata == null ? null : _idPMetadata.getMendixObject());
			params.put("ID", _iD);
			params.put("Name", _name);
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.M_GetEntitiesDescriptor", params);
			return result == null ? null : saml20.proxies.EntitiesDescriptor.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.RoleDescriptor m_GetIDPSSODescriptor(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.M_GetIDPSSODescriptor", params);
			return result == null ? null : saml20.proxies.RoleDescriptor.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.Endpoint m_GetManageNameIDService(IContext context, java.lang.String _binding)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Binding", _binding);
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.M_GetManageNameIDService", params);
			return result == null ? null : saml20.proxies.Endpoint.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.NameIDFormat m_GetNameIDFormat(IContext context, java.lang.String _content)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("content", _content);
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.M_GetNameIDFormat", params);
			return result == null ? null : saml20.proxies.NameIDFormat.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.Endpoint m_GetNameIDMappingService(IContext context, java.lang.String _binding)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Binding", _binding);
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.M_GetNameIDMappingService", params);
			return result == null ? null : saml20.proxies.Endpoint.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.Endpoint m_GetSingleLogoutService(IContext context, java.lang.String _binding)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Binding", _binding);
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.M_GetSingleLogoutService", params);
			return result == null ? null : saml20.proxies.Endpoint.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.Endpoint m_GetSingleSignOnService(IContext context, java.lang.String _binding)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Binding", _binding);
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.M_GetSingleSignOnService", params);
			return result == null ? null : saml20.proxies.Endpoint.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.RoleDescriptor m_GetSPSSODescriptor(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.M_GetSPSSODescriptor", params);
			return result == null ? null : saml20.proxies.RoleDescriptor.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.KeyInfo m_PassKeyInfo(IContext context, saml20.proxies.KeyInfo _xMLMappingParent)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("XMLMappingParent", _xMLMappingParent == null ? null : _xMLMappingParent.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.M_PassKeyInfo", params);
			return result == null ? null : saml20.proxies.KeyInfo.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_DeleteAttribute(IContext context, saml20.proxies.Attribute _attribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Attribute", _attribute == null ? null : _attribute.getMendixObject());
			Core.execute(context, "SAML20.MB_DeleteAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_NewAttribute(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.MB_NewAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_NewAttribute_ClaimMap(IContext context, saml20.proxies.ClaimMap _claimMap)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ClaimMap", _claimMap == null ? null : _claimMap.getMendixObject());
			Core.execute(context, "SAML20.MB_NewAttribute_ClaimMap", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_NewConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SAML20.MB_NewConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_ResetKeystore(IContext context, saml20.proxies.KeyStore _keyStore, saml20.proxies.SPMetadata _sPMetadata)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("KeyStore", _keyStore == null ? null : _keyStore.getMendixObject());
			params.put("SPMetadata", _sPMetadata == null ? null : _sPMetadata.getMendixObject());
			Core.execute(context, "SAML20.MB_ResetKeystore", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean mB_SaveSPMetadata(IContext context, saml20.proxies.SPMetadata _sPMetadata)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SPMetadata", _sPMetadata == null ? null : _sPMetadata.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "SAML20.MB_SaveSPMetadata", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_SelectAttribute(IContext context, saml20.proxies.Attribute _attribute, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Attribute", _attribute == null ? null : _attribute.getMendixObject());
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.MB_SelectAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_SelectAttribute_ClaimMap(IContext context, saml20.proxies.Attribute _attribute, saml20.proxies.ClaimMap _claimMap)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Attribute", _attribute == null ? null : _attribute.getMendixObject());
			params.put("ClaimMap", _claimMap == null ? null : _claimMap.getMendixObject());
			Core.execute(context, "SAML20.MB_SelectAttribute_ClaimMap", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_SelectEntityDescriptor(IContext context, saml20.proxies.EntityDescriptor _entityDescriptor, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EntityDescriptor", _entityDescriptor == null ? null : _entityDescriptor.getMendixObject());
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.MB_SelectEntityDescriptor", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_ShowAttributesForConfig(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.MB_ShowAttributesForConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_ShowAttributesForConfig_ClaimMap(IContext context, saml20.proxies.ClaimMap _claimMap)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ClaimMap", _claimMap == null ? null : _claimMap.getMendixObject());
			Core.execute(context, "SAML20.MB_ShowAttributesForConfig_ClaimMap", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_ShowEntityDescriptors(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.MB_ShowEntityDescriptors", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_ShowSelectedEntityDescriptor(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.MB_ShowSelectedEntityDescriptor", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_SSOConfiguration_Save(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.MB_SSOConfiguration_Save", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_ToggleActive(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.MB_ToggleActive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_UploadKeyStore(IContext context, saml20.proxies.KeyStore _keyStore)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("KeyStore", _keyStore == null ? null : _keyStore.getMendixObject());
			Core.execute(context, "SAML20.MB_UploadKeyStore", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<saml20.proxies.Attribute> mF_AvailableAttributesForSSOConfig(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "SAML20.MF_AvailableAttributesForSSOConfig", params);
			java.util.List<saml20.proxies.Attribute> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<saml20.proxies.Attribute>();
				for (IMendixObject obj : objs)
					result.add(saml20.proxies.Attribute.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<saml20.proxies.Attribute> mF_AvailableAttributesForSSOConfigByClaimMap(IContext context, saml20.proxies.ClaimMap _claimMap)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ClaimMap", _claimMap == null ? null : _claimMap.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "SAML20.MF_AvailableAttributesForSSOConfigByClaimMap", params);
			java.util.List<saml20.proxies.Attribute> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<saml20.proxies.Attribute>();
				for (IMendixObject obj : objs)
					result.add(saml20.proxies.Attribute.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DoRefresh(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.OC_DoRefresh", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_RefreshAttributes(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.OC_RefreshAttributes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_SSOConfigUserEntity(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.OCh_SSOConfigUserEntity", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SAML20.OpenConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.WizardStepCollection openPreviousForm(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "SAML20.OpenPreviousForm", params);
			if (result == null)
				return null;
			return saml20.proxies.WizardStepCollection.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void prepareInCommonAttributes(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SAML20.PrepareInCommonAttributes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refreshApplicationRootURL(IContext context, saml20.proxies.SPMetadata _sPMetadata)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SPMetadata", _sPMetadata == null ? null : _sPMetadata.getMendixObject());
			Core.execute(context, "SAML20.RefreshApplicationRootURL", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void requestResponse_Overview(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SAML20.RequestResponse_Overview", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void resetConfiguration(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.ResetConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static saml20.proxies.IdPMetadata retrieveIdPMetadata(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "SAML20.RetrieveIdPMetadata", params);
			return result == null ? null : saml20.proxies.IdPMetadata.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sE_LogCleanUp(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SAML20.SE_LogCleanUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sE_Sync_IDPMetadata(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SAML20.SE_Sync_IDPMetadata", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setBindingType(IContext context, java.lang.String _binding, saml20.proxies.Endpoint _endpoint)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Binding", _binding);
			params.put("Endpoint", _endpoint == null ? null : _endpoint.getMendixObject());
			Core.execute(context, "SAML20.SetBindingType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean sPMetadata_Validate(IContext context, saml20.proxies.SPMetadata _sPMetadata)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SPMetadata", _sPMetadata == null ? null : _sPMetadata.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "SAML20.SPMetadata_Validate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sSOConfig_Finished(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.SSOConfig_Finished", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sSOConfig_ToStep1(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.SSOConfig_ToStep1", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sSOConfig_ToStep3(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.SSOConfig_ToStep3", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sSOConfig_ToStep4(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.SSOConfig_ToStep4", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sSOConfig_ToStep5(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.SSOConfig_ToStep5", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sSOConfig_ToStep6(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.SSOConfig_ToStep6", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sSOConfig_ToStep7(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.SSOConfig_ToStep7", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sSOConfig_ToStep8(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.SSOConfig_ToStep8", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sSOConfig_ToStepBack(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.SSOConfig_ToStepBack", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sSOConfiguration_ExportMetadata(IContext context, saml20.proxies.SPMetadata _sPMetadata)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SPMetadata", _sPMetadata == null ? null : _sPMetadata.getMendixObject());
			Core.execute(context, "SAML20.SSOConfiguration_ExportMetadata", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sSOConfigurationReloadConfig_ADe(IContext context, saml20.proxies.SSOConfiguration _sSOConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SSOConfiguration", _sSOConfiguration == null ? null : _sSOConfiguration.getMendixObject());
			Core.execute(context, "SAML20.SSOConfigurationReloadConfig_ADe", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean startup(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "SAML20.Startup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}