// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package splitstringutility.actions;

import java.util.ArrayList;
import java.util.List;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import splitstringutility.proxies.ResultString;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class SplitString extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private java.lang.String DelimitedString;
	private java.lang.String Delimeter;

	public SplitString(IContext context, java.lang.String DelimitedString, java.lang.String Delimeter)
	{
		super(context);
		this.DelimitedString = DelimitedString;
		this.Delimeter = Delimeter;
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
		if ((DelimitedString != null) && (DelimitedString.trim() != "")){
			String[] strings = DelimitedString.split(Delimeter);					// The array built from the original string
			List<IMendixObject> splitStringsList = new ArrayList<IMendixObject>(); 	// The list to return
			IMendixObject TheResultString;											// Need an IMendixObject to return
			for (int i = 0; i < strings.length; i++) {
				ResultString myString = new ResultString(getContext());				// New proxy object each time to avoid same word repeating.
				myString.setValue(strings[i]);
				TheResultString = myString.getMendixObject();						// Get the IMendixObject from the proxy object
				splitStringsList.add(TheResultString);								// and add it to the list
			}
			return splitStringsList;
		}else {
			throw new com.mendix.systemwideinterfaces.MendixRuntimeException("The string provided to " + this.getActionName() + "cannot be blank or empty.");
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "SplitString";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
